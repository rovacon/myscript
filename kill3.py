'''
题目如下：
传说在公元1世纪的犹太战争中，犹太历史学家佛拉维奥*约瑟夫斯和他的40个同胞被罗马士兵保卫。犹太士兵决定宁可自杀也不做俘虏，于是商量出了一个自杀方案。他们围成一个圈，从一个人开始，数到第三个人时将第三个人杀死，然后再数，直到杀光所有人。约瑟夫和另外一个人决定不参加这个疯狂的游戏，他们快速地计算出了两个位置，站在那里得以幸存。
 
请写一段程序将N个人围成一圈，并且第m个人会被杀掉，计算一圈人中哪两个人最后会存活。
要求：
可使用任意语言编写程序
可使用任意方式解决此问题，建议使用循环链表。
'''
a= range(1,41)
begin=2
left=0
while len(a)>2:
  b=a[begin::3]
  #begin是列表的序列，是从0开始。所以计算剩下几个人时需要从列表总长度减去begin+1，再取余数
  left=(len(a)-(begin+1))%3
  #begin=3-left-1
  begin=2-left
  print left
  c=set(a)-set(b)
  a=list(c)
  a.sort()
  print a

